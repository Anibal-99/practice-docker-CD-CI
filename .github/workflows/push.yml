name: ci

on:
  push: # se va a ejecutar cuando se haga un push a github
    branches:
      - master

jobs: # definimos el trabajo que debera hacer al momento de hacer un push
  deploy:
    runs-on: ubuntu-latest #donde va a correr todo esto, es como una maquina virtual en donde va a correr github
    steps: # luego vamos a correr diferentes pasos dentro de esa maquina virtual y estos pasos van a ser las acciones
      - name: Traer el ultimo commit
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2 # action para para loguearse en docker hub y poder subir la imagen
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # secrets que definimos en la configuracion del repositorio
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image # construye la imagen y la sube a docker hub
        uses: docker/build-push-action@v1
        with:
          context: ./prueba-3 # en esta linea que especificamos es para que sepa cual es el dockerfile que debe usar
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx:latest # como queremos que sea el tags de la imagen en docker hub

      - name: construir el docker compose
        run: docker-compose -f ./prueba-3/docker-compose.yml up -d # ejecuta el docker-compose en background que se encuentra en prueba-3
